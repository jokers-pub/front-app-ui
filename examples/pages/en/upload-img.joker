<template>
    <div ref="container" class="joker-demo-container">
        <h2>Upload Img Component</h2>
        <p>
            Used for uploading local images to the server while displaying previews during the upload process. Note that the Uploader component does not include the interface logic for uploading files to the server - this step needs to be implemented separately.
        </p>
        <h3>Basic Usage</h3>
        <DemoContainer component="@(components.DEMO_JOKER_demo1)">
            <pre><code class="language-html">&lt;template&gt;
    &lt;jk-cell&gt;
        &lt;jk-upload-img
            value=&quot;@(['https://img.freepik.com/free-photo/dark-car-highway-evening-drive-summer-scenery_169016-68014.jpg??w=360'])&quot;
        /&gt;
    &lt;/jk-cell&gt;
&lt;/template&gt;

</code></pre>
        </DemoContainer>
        <h3>File Quantity Limit</h3>
        <p>
            Configure the maximum number of uploadable files via
            <code>maxFileCount</code>
        </p>
        <DemoContainer component="@(components.DEMO_JOKER_demo2)">
            <pre><code class="language-html">&lt;template&gt;
    &lt;jk-cell&gt;
        &lt;jk-upload-img max-file-count=&quot;2&quot; /&gt;
    &lt;/jk-cell&gt;
&lt;/template&gt;

</code></pre>
        </DemoContainer>
        <h3>File Type Restrictions</h3>
        <p>
            Restrict upload file types using
            <code>mimeType</code>
            . Default values: [&quot;image/png&quot;, &quot;image/jpeg&quot;]
        </p>
        <DemoContainer component="@(components.DEMO_JOKER_demo3)">
            <pre><code class="language-html">&lt;template&gt;
    &lt;jk-cell&gt;
        &lt;jk-upload-img mimeType=&quot;@(['image/png'])&quot; /&gt;
    &lt;/jk-cell&gt;
&lt;/template&gt;

</code></pre>
        </DemoContainer>
        <h3>Display Size</h3>
        <p>
            Configure component display size via
            <code>size</code>
        </p>
        <DemoContainer component="@(components.DEMO_JOKER_demo4)">
            <pre><code class="language-html">&lt;template&gt;
    &lt;jk-cell&gt;
        &lt;jk-upload-img
            size=&quot;large&quot;
            value=&quot;@(['https://img.freepik.com/free-photo/dark-car-highway-evening-drive-summer-scenery_169016-68014.jpg??w=360'])&quot;
        /&gt;
    &lt;/jk-cell&gt;
    &lt;jk-cell&gt;
        &lt;jk-upload-img
            value=&quot;@(['https://img.freepik.com/free-photo/dark-car-highway-evening-drive-summer-scenery_169016-68014.jpg??w=360'])&quot;
        /&gt;
    &lt;/jk-cell&gt;
    &lt;jk-cell&gt;
        &lt;jk-upload-img
            size=&quot;small&quot;
            value=&quot;@(['https://img.freepik.com/free-photo/dark-car-highway-evening-drive-summer-scenery_169016-68014.jpg??w=360'])&quot;
        /&gt;
    &lt;/jk-cell&gt;
    &lt;jk-cell&gt;
        &lt;jk-upload-img
            size=&quot;mini&quot;
            value=&quot;@(['https://img.freepik.com/free-photo/dark-car-highway-evening-drive-summer-scenery_169016-68014.jpg??w=360'])&quot;
        /&gt;
    &lt;/jk-cell&gt;
&lt;/template&gt;

</code></pre>
        </DemoContainer>
        <h3>Simulated Upload</h3>
        <p>
            Implement custom upload logic using
            <code>before-read</code>
            and
            <code>before-delete</code>
            .
        </p>
        <DemoContainer component="@(components.DEMO_JOKER_demo5)">
            <pre><code class="language-html">&lt;template&gt;
    &lt;jk-cell&gt;
        &lt;jk-upload-img before-read=&quot;@beforeRead&quot; before-delete=&quot;@beforeDelete&quot; /&gt;
    &lt;/jk-cell&gt;
&lt;/template&gt;
&lt;script&gt;
import { Component } from &quot;@joker.front/core&quot;;
import { sleep } from &quot;@joker.front/shared&quot;;
import { Loading } from &quot;../../../src&quot;;

export default class extends Component {
    async beforeRead(file: File) {
        let loading = Loading();
        //模拟上传
        await sleep(1000);
        loading.close();
        //返回上传后的文件路径
        return URL.createObjectURL(file);

        //返回false 则代表上传/读取失败，将不会添加到展示结果中
        //return false;
    }

    async beforeDelete(index: number, urlOrFile: any) {
        let loading = Loading();
        //模拟从服务器中删除地址
        await sleep(1000);
        loading.close();

        //返回false 则代表上传/读取失败，将不会添加到展示结果中
        //return false;
    }
}
&lt;/script&gt;
</code></pre>
        </DemoContainer>
        <h3>Attributes</h3>
        <table class="mkd-table">
            <thead>
                <tr>
                    <th>Parameter</th>
                    <th>Description</th>
                    <th>Type</th>
                    <th>Options</th>
                    <th>Default</th>
                </tr>
            </thead>
            <tbody>
                <tr>
                    <td>class</td>
                    <td>Custom styles</td>
                    <td>string</td>
                    <td>—</td>
                    <td>—</td>
                </tr>
                <tr>
                    <td>size</td>
                    <td>Display size</td>
                    <td>large/small/mini</td>
                    <td>—</td>
                    <td>—</td>
                </tr>
                <tr>
                    <td>returnType</td>
                    <td>
                        Data type returned for form submission. When using
                        <code>before-read</code>
                        for custom upload with server URLs, returnType changes to url
                    </td>
                    <td>url/file</td>
                    <td>—</td>
                    <td>file</td>
                </tr>
                <tr>
                    <td>disabled</td>
                    <td>Whether disabled</td>
                    <td>boolean</td>
                    <td>—</td>
                    <td>false</td>
                </tr>
                <tr>
                    <td>maxFileCount</td>
                    <td>Maximum upload count</td>
                    <td>number</td>
                    <td>—</td>
                    <td></td>
                </tr>
                <tr>
                    <td>maxFileSize</td>
                    <td>Maximum upload file size (KB)</td>
                    <td>number</td>
                    <td>—</td>
                    <td></td>
                </tr>
                <tr>
                    <td>mimeType</td>
                    <td>
                        File type restrictions, supports wildcards e.g.
                        <strong>(image/*)</strong>
                    </td>
                    <td>string / string[]</td>
                    <td>—</td>
                    <td>—</td>
                </tr>
                <tr>
                    <td>beforeRead</td>
                    <td>Pre-read file operation for implementing custom upload</td>
                    <td>(file: File) =&gt; any</td>
                    <td>—</td>
                    <td></td>
                </tr>
                <tr>
                    <td>beforeDelete</td>
                    <td>File deletion operation for implementing custom server deletion</td>
                    <td>(index: number, urlOrFile: any) =&gt;any</td>
                    <td>—</td>
                    <td></td>
                </tr>
            </tbody>
        </table>
        <h3>Events</h3>
        <table class="mkd-table">
            <thead>
                <tr>
                    <th>Event Name</th>
                    <th>Description</th>
                    <th>Parameters</th>
                </tr>
            </thead>
            <tbody>
                <tr>
                    <td>change</td>
                    <td>Value change event</td>
                    <td>value</td>
                </tr>
            </tbody>
        </table>
        <BottomNav />
    </div>
</template>

<script>
import { Component } from "@joker.front/core";
import hljs from "highlight.js/lib/common";
import BottomNav from "../../common/components/bottom-nav.joker";
import DEMO_JOKER_demo5 from "../../components/upload-img/demo5.joker";
import DEMO_JOKER_demo4 from "../../components/upload-img/demo4.joker";
import DEMO_JOKER_demo3 from "../../components/upload-img/demo3.joker";
import DEMO_JOKER_demo2 from "../../components/upload-img/demo2.joker";
import DEMO_JOKER_demo1 from "../../components/upload-img/demo1.joker";
export default class extends Component {
    components = {
        BottomNav,
        DEMO_JOKER_demo5,
        DEMO_JOKER_demo4,
        DEMO_JOKER_demo3,
        DEMO_JOKER_demo2,
        DEMO_JOKER_demo1
    };
    mounted() {
        let container = this.$getRef("container")?.output!;
        container.querySelectorAll("pre code").forEach((el: HTMLElement) => {
            hljs.highlightElement(el);
        });
    }
}

</script>