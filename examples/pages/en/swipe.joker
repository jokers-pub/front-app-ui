<template>
    <div ref="container" class="joker-demo-container">
        <h2>Swipe Carousel</h2>
        <p>Used for displaying a group of images or content in a loop.</p>
        <div class="warning">
            <p>Please switch to mobile mode for viewing as touch events are not supported on PC.</p>
        </div>
        <h3>Basic Usage</h3>
        <p>Applicable for general foundational use cases.</p>
        <p>
            By combining the
            <code>&lt;jk-swiper&gt;</code>
            and
            <code>&lt;jk-swiper-item&gt;</code>
            tags, you can create a carousel. The slide content can be arbitrary and should be placed within the
            <code>&lt;jk-swiper-item&gt;</code>
            tag.
        </p>
        <DemoContainer component="@(components.DEMO_JOKER_demo1)">
            <pre><code class="language-html">&lt;template&gt;
    &lt;jk-cell&gt;
        &lt;jk-swipe height=&quot;150px&quot; autoplay=&quot;@false&quot;&gt;
            @for(let (index,item) in model.list) {
                &lt;jk-swipe-item&gt;
                    &lt;div class=&quot;item small @(index%2===0?'even':'')&quot;&gt;
                        @item
                    &lt;/div&gt;
                &lt;/jk-swipe-item&gt;
            }
        &lt;/jk-swipe&gt;
    &lt;/jk-cell&gt;
    &lt;jk-cell title=&quot;Show Switch Arrow&quot; title-align=&quot;top&quot;&gt;
        &lt;jk-swipe height=&quot;150px&quot; arrow&gt;
            @for(let (index,item) in model.list) {
                &lt;jk-swipe-item&gt;
                    &lt;div class=&quot;item small @(index%2===0?'even':'')&quot;&gt;
                        @item
                    &lt;/div&gt;
                &lt;/jk-swipe-item&gt;
            }
        &lt;/jk-swipe&gt;
    &lt;/jk-cell&gt;
&lt;/template&gt;
&lt;script&gt;
import { Component } from &quot;@joker.front/core&quot;;

export default class extends Component {
    model = {
        list: [1, 2, 3, 4]
    };
}
&lt;/script&gt;
&lt;style lang=&quot;scss&quot; scoped&gt;
.item {
    color: #475669;
    font-size: 14px;
    line-height: 150px;
    margin: 0;
    text-align: center;
    background-color: #d3dce6;
    margin-bottom: 8px;
    border-radius: 4px;
    box-shadow: 0 1px 2px rgba(0, 0, 0, 0.1);

    &amp;.even {
        background-color: #99a9bf;
    }
}
&lt;/style&gt;
</code></pre>
        </DemoContainer>
        <h3>Indicator</h3>
        <p>The display position of the indicator can be set outside the container.</p>
        <p>
            The
            <code>indicatorPosition</code>
            property defines the position of the indicator. By default, it is displayed inside the carousel. Setting it to
            <code>outside</code>
            will display it externally, while
            <code>none</code>
            will hide the indicator entirely.
        </p>
        <DemoContainer component="@(components.DEMO_JOKER_demo2)">
            <pre><code class="language-html">&lt;template&gt;
    &lt;jk-cell&gt;
        &lt;jk-swipe indicatorPosition=&quot;outside&quot; height=&quot;150px&quot;&gt;
            @for(let (index,item) in model.list) {
                &lt;jk-swipe-item&gt;
                    &lt;div class=&quot;item small @(index%2===0?'even':'')&quot;&gt;
                        @item
                    &lt;/div&gt;
                &lt;/jk-swipe-item&gt;
            }
        &lt;/jk-swipe&gt;
    &lt;/jk-cell&gt;
&lt;/template&gt;
&lt;script&gt;
import { Component } from &quot;@joker.front/core&quot;;

export default class extends Component {
    model = { list: [1, 2, 3, 4] };
}
&lt;/script&gt;

&lt;style lang=&quot;scss&quot; scoped&gt;
.item {
    color: #475669;
    font-size: 14px;
    line-height: 150px;
    margin: 0;
    text-align: center;
    background-color: #d3dce6;
    margin-bottom: 8px;
    border-radius: 4px;
    box-shadow: 0 1px 2px rgba(0, 0, 0, 0.1);

    &amp;.even {
        background-color: #99a9bf;
    }
}
&lt;/style&gt;
</code></pre>
        </DemoContainer>
        <h3>Direction</h3>
        <p>
            By default, the
            <code>direction</code>
            is set to
            <code>horizontal</code>
            . Configuring
            <code>direction</code>
            to
            <code>vertical</code>
            will display the carousel in a vertical orientation.
        </p>
        <DemoContainer component="@(components.DEMO_JOKER_demo5)">
            <pre><code class="language-html">&lt;template&gt;
    &lt;jk-cell&gt;
        &lt;jk-swipe height=&quot;200px&quot; direction=&quot;vertical&quot; autoplay=&quot;@false&quot;&gt;
            @for(let (index,item) in model.list) {
                &lt;jk-swipe-item&gt;
                    &lt;div class=&quot;item small @(index%2===0?'even':'')&quot;&gt;
                        @item
                    &lt;/div&gt;
                &lt;/jk-swipe-item&gt;
            }
        &lt;/jk-swipe&gt;
    &lt;/jk-cell&gt;
&lt;/template&gt;
&lt;script&gt;
import { Component } from &quot;@joker.front/core&quot;;

export default class extends Component {
    model = { list: [1, 2, 3] };
}
&lt;/script&gt;

&lt;style lang=&quot;scss&quot; scoped&gt;
.item {
    color: #475669;
    font-size: 14px;
    line-height: 200px;
    margin: 0;
    text-align: center;
    background-color: #d3dce6;
    margin-bottom: 8px;
    border-radius: 4px;
    box-shadow: 0 1px 2px rgba(0, 0, 0, 0.1);

    &amp;.even {
        background-color: #99a9bf;
    }
}
&lt;/style&gt;
</code></pre>
        </DemoContainer>
        <h3>Swipe Attributes</h3>
        <table class="mkd-table">
            <thead>
                <tr>
                    <th>Parameter</th>
                    <th>Description</th>
                    <th>Type</th>
                    <th>Accepted Values</th>
                    <th>Default</th>
                </tr>
            </thead>
            <tbody>
                <tr>
                    <td>height</td>
                    <td>Height of the carousel</td>
                    <td>string</td>
                    <td>—</td>
                    <td>—</td>
                </tr>
                <tr>
                    <td>class</td>
                    <td>Custom class styles</td>
                    <td>string</td>
                    <td>—</td>
                    <td>—</td>
                </tr>
                <tr>
                    <td>initialIndex</td>
                    <td>Index of the initially active slide (0-based)</td>
                    <td>number</td>
                    <td>—</td>
                    <td>0</td>
                </tr>
                <tr>
                    <td>autoplay</td>
                    <td>Whether to enable auto-switching</td>
                    <td>boolean</td>
                    <td>—</td>
                    <td>true</td>
                </tr>
                <tr>
                    <td>interval</td>
                    <td>Auto-switch interval in milliseconds</td>
                    <td>number</td>
                    <td>—</td>
                    <td>3000</td>
                </tr>
                <tr>
                    <td>indicatorPosition</td>
                    <td>Position of the indicator</td>
                    <td>string</td>
                    <td>
                        <code>outside</code>
                        /
                        <code>none</code>
                    </td>
                    <td>—</td>
                </tr>
                <tr>
                    <td>arrow</td>
                    <td>Whether to display navigation arrows</td>
                    <td>boolean</td>
                    <td>—</td>
                    <td>false</td>
                </tr>
                <tr>
                    <td>loop</td>
                    <td>Whether to enable looping</td>
                    <td>boolean</td>
                    <td>—</td>
                    <td>true</td>
                </tr>
                <tr>
                    <td>direction</td>
                    <td>Display direction of the carousel</td>
                    <td>string</td>
                    <td>
                        <code>horizontal</code>
                        /
                        <code>vertical</code>
                    </td>
                    <td>
                        <code>horizontal</code>
                    </td>
                </tr>
            </tbody>
        </table>
        <h3>Swipe Events</h3>
        <table class="mkd-table">
            <thead>
                <tr>
                    <th>Event Name</th>
                    <th>Description</th>
                    <th>Callback Parameters</th>
                </tr>
            </thead>
            <tbody>
                <tr>
                    <td>change</td>
                    <td>Triggered when slides switch</td>
                    <td>Index of the currently active slide and the previous slide's index</td>
                </tr>
            </tbody>
        </table>
        <h3>Swipe Methods</h3>
        <table class="mkd-table">
            <thead>
                <tr>
                    <th>Method Name</th>
                    <th>Description</th>
                    <th>Parameters</th>
                </tr>
            </thead>
            <tbody>
                <tr>
                    <td>setActiveItem</td>
                    <td>Manually switch slides</td>
                    <td>
                        Target slide index (0-based) or the
                        <code>name</code>
                        attribute of the corresponding
                        <code>&lt;jk-carousel-item&gt;</code>
                    </td>
                </tr>
                <tr>
                    <td>prev</td>
                    <td>Switch to the previous slide</td>
                    <td>—</td>
                </tr>
                <tr>
                    <td>next</td>
                    <td>Switch to the next slide</td>
                    <td>—</td>
                </tr>
            </tbody>
        </table>
        <BottomNav />
    </div>
</template>

<script>
import { Component } from "@joker.front/core";
import hljs from "highlight.js/lib/common";
import BottomNav from "../../common/components/bottom-nav.joker";
import DEMO_JOKER_demo5 from "../../components/swipe/demo5.joker";
import DEMO_JOKER_demo2 from "../../components/swipe/demo2.joker";
import DEMO_JOKER_demo1 from "../../components/swipe/demo1.joker";
export default class extends Component {
    components = {
        BottomNav,
        DEMO_JOKER_demo5,
        DEMO_JOKER_demo2,
        DEMO_JOKER_demo1
    };
    mounted() {
        let container = this.$getRef("container")?.output!;
        container.querySelectorAll("pre code").forEach((el: HTMLElement) => {
            hljs.highlightElement(el);
        });
    }
}

</script>