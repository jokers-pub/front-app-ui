<template>
    <div ref="container" class="joker-demo-container">
        <h2>Swipe 轮播</h2>
        <p>用于循环播放一组图片或内容。</p>
        <div class="warning">
            <p>请切换到移动端模式进行浏览，PC端无法执行touch事件。</p>
        </div>
        <h3>基础用法</h3>
        <p>适用广泛的基础用法。</p>
        <p>
            结合使用 jk-swiper 和 jk-swiper-item 标签就得到了一个走马灯。幻灯片的内容是任意的，需要放在 jk-swiper-item 标签中。
        </p>
        <DemoContainer component="@(components.DEMO_JOKER_demo1)">
            <pre><code class="language-html">&lt;template&gt;
    &lt;jk-cell&gt;
        &lt;jk-swipe height=&quot;150px&quot; autoplay=&quot;@false&quot;&gt;
            @for(let (index,item) in model.list) {
                &lt;jk-swipe-item&gt;
                    &lt;div class=&quot;item small @(index%2===0?'even':'')&quot;&gt;
                        @item
                    &lt;/div&gt;
                &lt;/jk-swipe-item&gt;
            }
        &lt;/jk-swipe&gt;
    &lt;/jk-cell&gt;
    &lt;jk-cell title=&quot;Show Switch Arrow&quot; title-align=&quot;top&quot;&gt;
        &lt;jk-swipe height=&quot;150px&quot; arrow&gt;
            @for(let (index,item) in model.list) {
                &lt;jk-swipe-item&gt;
                    &lt;div class=&quot;item small @(index%2===0?'even':'')&quot;&gt;
                        @item
                    &lt;/div&gt;
                &lt;/jk-swipe-item&gt;
            }
        &lt;/jk-swipe&gt;
    &lt;/jk-cell&gt;
&lt;/template&gt;
&lt;script&gt;
import { Component } from &quot;@joker.front/core&quot;;

export default class extends Component {
    model = {
        list: [1, 2, 3, 4]
    };
}
&lt;/script&gt;
&lt;style lang=&quot;scss&quot; scoped&gt;
.item {
    color: #475669;
    font-size: 14px;
    line-height: 150px;
    margin: 0;
    text-align: center;
    background-color: #d3dce6;
    margin-bottom: 8px;
    border-radius: 4px;
    box-shadow: 0 1px 2px rgba(0, 0, 0, 0.1);

    &amp;.even {
        background-color: #99a9bf;
    }
}
&lt;/style&gt;
</code></pre>
        </DemoContainer>
        <h3>指示器</h3>
        <p>可以将指示器的显示位置设置在容器外部</p>
        <p>
            indicatorPosition 属性定义了指示器的位置。默认情况下，它会显示在走马灯内部，设置为 outside 则会显示在外部；设置为 none 则不会显示指示器。
        </p>
        <DemoContainer component="@(components.DEMO_JOKER_demo2)">
            <pre><code class="language-html">&lt;template&gt;
    &lt;jk-cell&gt;
        &lt;jk-swipe indicatorPosition=&quot;outside&quot; height=&quot;150px&quot;&gt;
            @for(let (index,item) in model.list) {
                &lt;jk-swipe-item&gt;
                    &lt;div class=&quot;item small @(index%2===0?'even':'')&quot;&gt;
                        @item
                    &lt;/div&gt;
                &lt;/jk-swipe-item&gt;
            }
        &lt;/jk-swipe&gt;
    &lt;/jk-cell&gt;
&lt;/template&gt;
&lt;script&gt;
import { Component } from &quot;@joker.front/core&quot;;

export default class extends Component {
    model = { list: [1, 2, 3, 4] };
}
&lt;/script&gt;

&lt;style lang=&quot;scss&quot; scoped&gt;
.item {
    color: #475669;
    font-size: 14px;
    line-height: 150px;
    margin: 0;
    text-align: center;
    background-color: #d3dce6;
    margin-bottom: 8px;
    border-radius: 4px;
    box-shadow: 0 1px 2px rgba(0, 0, 0, 0.1);

    &amp;.even {
        background-color: #99a9bf;
    }
}
&lt;/style&gt;
</code></pre>
        </DemoContainer>
        <h3>方向</h3>
        <p>默认情况下，direction 为 horizontal。通过设置 direction 为 vertical 来让走马灯在垂直方向上显示。</p>
        <DemoContainer component="@(components.DEMO_JOKER_demo5)">
            <pre><code class="language-html">&lt;template&gt;
    &lt;jk-cell&gt;
        &lt;jk-swipe height=&quot;200px&quot; direction=&quot;vertical&quot; autoplay=&quot;@false&quot;&gt;
            @for(let (index,item) in model.list) {
                &lt;jk-swipe-item&gt;
                    &lt;div class=&quot;item small @(index%2===0?'even':'')&quot;&gt;
                        @item
                    &lt;/div&gt;
                &lt;/jk-swipe-item&gt;
            }
        &lt;/jk-swipe&gt;
    &lt;/jk-cell&gt;
&lt;/template&gt;
&lt;script&gt;
import { Component } from &quot;@joker.front/core&quot;;

export default class extends Component {
    model = { list: [1, 2, 3] };
}
&lt;/script&gt;

&lt;style lang=&quot;scss&quot; scoped&gt;
.item {
    color: #475669;
    font-size: 14px;
    line-height: 200px;
    margin: 0;
    text-align: center;
    background-color: #d3dce6;
    margin-bottom: 8px;
    border-radius: 4px;
    box-shadow: 0 1px 2px rgba(0, 0, 0, 0.1);

    &amp;.even {
        background-color: #99a9bf;
    }
}
&lt;/style&gt;
</code></pre>
        </DemoContainer>
        <h3>Swipe Attributes</h3>
        <table class="mkd-table">
            <thead>
                <tr>
                    <th>参数</th>
                    <th>说明</th>
                    <th>类型</th>
                    <th>可选值</th>
                    <th>默认值</th>
                </tr>
            </thead>
            <tbody>
                <tr>
                    <td>height</td>
                    <td>走马灯的高度</td>
                    <td>string</td>
                    <td>—</td>
                    <td>—</td>
                </tr>
                <tr>
                    <td>class</td>
                    <td>自定义 class 样式</td>
                    <td>string</td>
                    <td>-</td>
                    <td>-</td>
                </tr>
                <tr>
                    <td>initialIndex</td>
                    <td>初始状态激活的幻灯片的索引，从 0 开始</td>
                    <td>number</td>
                    <td>—</td>
                    <td>0</td>
                </tr>
                <tr>
                    <td>autoplay</td>
                    <td>是否自动切换</td>
                    <td>boolean</td>
                    <td>—</td>
                    <td>true</td>
                </tr>
                <tr>
                    <td>interval</td>
                    <td>自动切换的时间间隔，单位为毫秒</td>
                    <td>number</td>
                    <td>-</td>
                    <td>3000</td>
                </tr>
                <tr>
                    <td>indicatorPosition</td>
                    <td>指示器的位置</td>
                    <td>string</td>
                    <td>outside/none</td>
                    <td>—</td>
                </tr>
                <tr>
                    <td>arrow</td>
                    <td>是否显示切换箭头</td>
                    <td>boolean</td>
                    <td>-</td>
                    <td>false</td>
                </tr>
                <tr>
                    <td>loop</td>
                    <td>是否循环显示</td>
                    <td>boolean</td>
                    <td>-</td>
                    <td>true</td>
                </tr>
                <tr>
                    <td>direction</td>
                    <td>走马灯展示的方向</td>
                    <td>string</td>
                    <td>horizontal/vertical</td>
                    <td>horizontal</td>
                </tr>
            </tbody>
        </table>
        <h3>Swipe Events</h3>
        <table class="mkd-table">
            <thead>
                <tr>
                    <th>事件名称</th>
                    <th>说明</th>
                    <th>回调参数</th>
                </tr>
            </thead>
            <tbody>
                <tr>
                    <td>change</td>
                    <td>幻灯片切换时触发</td>
                    <td>目前激活的幻灯片的索引，原幻灯片的索引</td>
                </tr>
            </tbody>
        </table>
        <h3>Swipe Methods</h3>
        <table class="mkd-table">
            <thead>
                <tr>
                    <th>方法名</th>
                    <th>说明</th>
                    <th>参数</th>
                </tr>
            </thead>
            <tbody>
                <tr>
                    <td>setActiveItem</td>
                    <td>手动切换幻灯片</td>
                    <td>需要切换的幻灯片的索引，从 0 开始；或相应 jk-carousel-item 的 name 属性值</td>
                </tr>
                <tr>
                    <td>prev</td>
                    <td>切换至上一张幻灯片</td>
                    <td>-</td>
                </tr>
                <tr>
                    <td>next</td>
                    <td>切换至下一张幻灯片</td>
                    <td>-</td>
                </tr>
            </tbody>
        </table>
        <BottomNav />
    </div>
</template>

<script>
import { Component } from "@joker.front/core";
import hljs from "highlight.js/lib/common";
import BottomNav from "../../common/components/bottom-nav.joker";
import DEMO_JOKER_demo5 from "../../components/swipe/demo5.joker";
import DEMO_JOKER_demo2 from "../../components/swipe/demo2.joker";
import DEMO_JOKER_demo1 from "../../components/swipe/demo1.joker";
export default class extends Component {
    components = {
        BottomNav,
        DEMO_JOKER_demo5,
        DEMO_JOKER_demo2,
        DEMO_JOKER_demo1
    };
    mounted() {
        let container = this.$getRef("container")?.output!;
        container.querySelectorAll("pre code").forEach((el: HTMLElement) => {
            hljs.highlightElement(el);
        });
    }
}

</script>