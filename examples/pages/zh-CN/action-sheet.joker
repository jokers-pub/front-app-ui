<template>
    <div ref="container" class="joker-demo-container">
        <h2>ActionSheet 动作面板</h2>
        <p>底部弹起的模态面板，包含与当前情境相关的多个选项。</p>
        <h3>基础用法</h3>
        <DemoContainer component="@(components.DEMO_JOKER_demo1)">
            <pre><code class="language-html">&lt;template&gt;
    &lt;jk-button fullWidth type=&quot;primary&quot; @click=&quot;handleClick&quot;&gt;Click Me&lt;/jk-button&gt;
    &lt;jk-action-sheet
        ref=&quot;actionSheet&quot;
        @select=&quot;handleSelect&quot;
        options=&quot;@([
            { label: '选项1', value: '1' },
            { label: '选项2', value: '2' },
            { label: '选项3', value: '3' },
            { label: '选项4', value: '4' }
        ])&quot;
    /&gt;
&lt;/template&gt;
&lt;script&gt;
import { VNode } from &quot;@joker.front/core&quot;;
import { Component } from &quot;@joker.front/core&quot;;
import { Toast } from &quot;../../../packages/toast&quot;;

export default class extends Component {
    handleClick() {
        this.$getRef(&quot;actionSheet&quot;)?.component.open();
    }
    handleSelect(e: VNode.Event&lt;{ label: string; value: string }&gt;) {
        Toast(e.data.label);
    }
}
&lt;/script&gt;
</code></pre>
        </DemoContainer>
        <h3>展示图标</h3>
        <DemoContainer component="@(components.DEMO_JOKER_demo2)">
            <pre><code class="language-html">&lt;template&gt;
    &lt;jk-button fullWidth type=&quot;primary&quot; @click=&quot;handleClick&quot;&gt;Click Me&lt;/jk-button&gt;
    &lt;jk-action-sheet
        ref=&quot;actionSheet&quot;
        @select=&quot;handleSelect&quot;
        options=&quot;@([
            { label: '选项1', value: '1', icon: 'jk-icon-user' },
            { label: '选项2', value: '2', icon: 'jk-icon-phone-outline' },
            { label: '选项3', value: '3', icon: 'jk-icon-success' },
            { label: '选项4', value: '4', icon: 'jk-icon-picture' }
        ])&quot;
    /&gt;
&lt;/template&gt;
&lt;script&gt;
import { VNode } from &quot;@joker.front/core&quot;;
import { Component } from &quot;@joker.front/core&quot;;
import { Toast } from &quot;../../../packages/toast&quot;;

export default class extends Component {
    handleClick() {
        this.$getRef(&quot;actionSheet&quot;)?.component.open();
    }
    handleSelect(e: VNode.Event&lt;{ label: string; value: string }&gt;) {
        Toast(e.data.label);
    }
}
&lt;/script&gt;
</code></pre>
        </DemoContainer>
        <h3>展示取消按钮</h3>
        <p>
            设置
            <code>showCancel</code>
            来展现取消按钮，并可以通过配置
            <code>cancel-text</code>
            来修改取消按钮文本
        </p>
        <DemoContainer component="@(components.DEMO_JOKER_demo3)">
            <pre><code class="language-html">&lt;template&gt;
    &lt;jk-button fullWidth type=&quot;primary&quot; @click=&quot;handleClick&quot;&gt;Click Me&lt;/jk-button&gt;
    &lt;jk-action-sheet
        ref=&quot;actionSheet&quot;
        showCancel
        @cancel=&quot;handleCancel&quot;
        @select=&quot;handleSelect&quot;
        options=&quot;@([
            { label: '选项1', value: '1', icon: 'jk-icon-user' },
            { label: '选项2', value: '2', icon: 'jk-icon-phone-outline', disabled: true },
            { label: '选项3', value: '3', icon: 'jk-icon-success' },
            { label: '选项4', value: '4', icon: 'jk-icon-picture' }
        ])&quot;
    /&gt;
&lt;/template&gt;
&lt;script&gt;
import { VNode } from &quot;@joker.front/core&quot;;
import { Component } from &quot;@joker.front/core&quot;;
import { Toast } from &quot;../../../packages/toast&quot;;

export default class extends Component {
    handleClick() {
        this.$getRef(&quot;actionSheet&quot;)?.component.open();
    }
    handleSelect(e: VNode.Event&lt;{ label: string; value: string }&gt;) {
        Toast(e.data.label);
    }
    handleCancel() {
        Toast(&quot;点击了取消&quot;);
    }
}
&lt;/script&gt;
</code></pre>
        </DemoContainer>
        <h3>显示简介</h3>
        <p>
            可设置
            <code>description</code>
            参数或者区块来展示面板简介，也可以配置
            <code>options</code>
            中项的
            <code>description</code>
            属性来配置选项的简介。
        </p>
        <DemoContainer component="@(components.DEMO_JOKER_demo4)">
            <pre><code class="language-html">&lt;template&gt;
    &lt;jk-button fullWidth type=&quot;primary&quot; @click=&quot;handleClick&quot;&gt;Click Me&lt;/jk-button&gt;
    &lt;jk-action-sheet
        ref=&quot;actionSheet&quot;
        showCancel
        @cancel=&quot;handleCancel&quot;
        @select=&quot;handleSelect&quot;
        description=&quot;我是简介&quot;
        options=&quot;@([
            { label: '选项1', value: '1', icon: 'jk-icon-user' },
            { label: '选项2', value: '2', icon: 'jk-icon-phone-outline' },
            { label: '选项3', value: '3', icon: 'jk-icon-success', description: '选项简介' },
            { label: '选项4', value: '4', icon: 'jk-icon-picture' }
        ])&quot;
    /&gt;
&lt;/template&gt;
&lt;script&gt;
import { VNode } from &quot;@joker.front/core&quot;;
import { Component } from &quot;@joker.front/core&quot;;
import { Toast } from &quot;../../../packages/toast&quot;;

export default class extends Component {
    handleClick() {
        this.$getRef(&quot;actionSheet&quot;)?.component.open();
    }
    handleSelect(e: VNode.Event&lt;{ label: string; value: string }&gt;) {
        Toast(e.data.label);
    }
    handleCancel() {
        Toast(&quot;点击了取消&quot;);
    }
}
&lt;/script&gt;
</code></pre>
        </DemoContainer>
        <h3>Attributes</h3>
        <table class="mkd-table">
            <thead>
                <tr>
                    <th>参数</th>
                    <th>说明</th>
                    <th>类型</th>
                    <th>可选值</th>
                    <th>默认值</th>
                </tr>
            </thead>
            <tbody>
                <tr>
                    <td>options</td>
                    <td>动作面板的选项列表数据，每项可配置标签、值、禁用状态及图标</td>
                    <td>
                        Array&lt;{label?: string; value?: string; disabled?: boolean; icon?: string}&gt;
                    </td>
                    <td>—</td>
                    <td>—</td>
                </tr>
                <tr>
                    <td>description</td>
                    <td>动作面板的辅助性简介文本，用于补充说明当前面板的用途或选项相关信息</td>
                    <td>string</td>
                    <td>—</td>
                    <td>—</td>
                </tr>
                <tr>
                    <td>showCancel</td>
                    <td>是否在面板底部显示取消按钮</td>
                    <td>boolean</td>
                    <td>—</td>
                    <td>false</td>
                </tr>
                <tr>
                    <td>cancelText</td>
                    <td>
                        取消按钮的自定义文本内容，仅在
                        <code>showCancel</code>
                        为
                        <code>true</code>
                        时生效
                    </td>
                    <td>string</td>
                    <td>—</td>
                    <td>&quot;取消&quot;</td>
                </tr>
            </tbody>
        </table>
        <h3>Events</h3>
        <table class="mkd-table">
            <thead>
                <tr>
                    <th>事件名</th>
                    <th>说明</th>
                    <th>参数</th>
                </tr>
            </thead>
            <tbody>
                <tr>
                    <td>select</td>
                    <td>选择项后触发</td>
                    <td>数组项</td>
                </tr>
                <tr>
                    <td>cancel</td>
                    <td>点击取消后事件</td>
                    <td>-</td>
                </tr>
            </tbody>
        </table>
        <h3>Sections</h3>
        <table class="mkd-table">
            <thead>
                <tr>
                    <th>名称</th>
                    <th>描述</th>
                </tr>
            </thead>
            <tbody>
                <tr>
                    <td>description</td>
                    <td>自定义描述</td>
                </tr>
                <tr>
                    <td>default</td>
                    <td>选项自定义渲染，参数为数据项</td>
                </tr>
            </tbody>
        </table>
        <BottomNav />
    </div>
</template>

<script>
import { Component } from "@joker.front/core";
import hljs from "highlight.js/lib/common";
import BottomNav from "../../common/components/bottom-nav.joker";
import DEMO_JOKER_demo4 from "../../components/action-sheet/demo4.joker";
import DEMO_JOKER_demo3 from "../../components/action-sheet/demo3.joker";
import DEMO_JOKER_demo2 from "../../components/action-sheet/demo2.joker";
import DEMO_JOKER_demo1 from "../../components/action-sheet/demo1.joker";
export default class extends Component {
    components = {
        BottomNav,
        DEMO_JOKER_demo4,
        DEMO_JOKER_demo3,
        DEMO_JOKER_demo2,
        DEMO_JOKER_demo1
    };
    mounted() {
        let container = this.$getRef("container")?.output!;
        container.querySelectorAll("pre code").forEach((el: HTMLElement) => {
            hljs.highlightElement(el);
        });
    }
}

</script>