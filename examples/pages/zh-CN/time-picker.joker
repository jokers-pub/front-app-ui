<template>
    <div ref="container" class="joker-demo-container">
        <h2>TimePicker 时间选择器</h2>
        <p>用于选择或输入时间</p>
        <h3>固定时间点</h3>
        <p>提供几个固定的时间点供用户选择</p>
        <p>
            使用 jk-time-select 标签，分别通过
            <code>start</code>
            、
            <code>end</code>
            和
            <code>step</code>
            指定可选的起始时间、结束时间和步长
        </p>
        <DemoContainer component="@(components.DEMO_JOKER_demo1)">
            <pre><code class="language-html">&lt;template&gt;
    &lt;jk-field&gt;
        &lt;jk-button fullWidth type=&quot;primary&quot; @click=&quot;handleClick&quot;&gt;Click Me&lt;/jk-button&gt;
        &lt;jk-time-select start=&quot;08:30&quot; ref=&quot;picker&quot; title=&quot;Select time&quot; step=&quot;00:10&quot; end=&quot;18:30&quot; @pick=&quot;handlePicke&quot; /&gt;
    &lt;/jk-field&gt;
    &lt;jk-field&gt;
        &lt;jk-date type=&quot;time-select&quot; start=&quot;08:30&quot; step=&quot;00:10&quot; end=&quot;18:30&quot; placeholder=&quot;Select time&quot; /&gt;
    &lt;/jk-field&gt;
&lt;/template&gt;
&lt;script&gt;
import { Component, VNode } from &quot;@joker.front/core&quot;;
import { Toast } from &quot;../../../packages/toast&quot;;

export default class extends Component {
    handleClick() {
        this.$getRef(&quot;picker&quot;)?.component.open();
    }

    handlePicke(e: VNode.Event&lt;string&gt;) {
        Toast(e.data);
    }
}
&lt;/script&gt;
</code></pre>
        </DemoContainer>
        <h3>固定时间范围</h3>
        <p>若先选择开始时间，则结束时间内备选项的状态会随之改变</p>
        <DemoContainer component="@(components.DEMO_JOKER_demo2)">
            <pre><code class="language-html">&lt;template&gt;
    &lt;jk-field&gt;
        &lt;jk-button fullWidth type=&quot;primary&quot; @click=&quot;handleClick('picker1')&quot;&gt;08:30 - 18:30&lt;/jk-button&gt;
    &lt;/jk-field&gt;
    &lt;jk-field&gt;
        &lt;jk-button fullWidth type=&quot;primary&quot; @click=&quot;handleClick('picker2')&quot;&gt;min-time : 09:00&lt;/jk-button&gt;
    &lt;/jk-field&gt;
    &lt;jk-time-select ref=&quot;picker1&quot; start=&quot;08:30&quot; step=&quot;00:10&quot; end=&quot;18:30&quot;&gt;&lt;/jk-time-select&gt;
    &lt;jk-time-select ref=&quot;picker2&quot; start=&quot;08:30&quot; step=&quot;00:10&quot; end=&quot;18:30&quot; minTime=&quot;09:00&quot;&gt;&lt;/jk-time-select&gt;
    &lt;jk-field&gt;
        &lt;jk-date type=&quot;time-select&quot; start=&quot;08:30&quot; step=&quot;00:10&quot; end=&quot;18:30&quot; placeholder=&quot;Select time&quot; /&gt;
    &lt;/jk-field&gt;
    &lt;jk-field&gt;
        &lt;jk-date type=&quot;time-select&quot; start=&quot;08:30&quot; step=&quot;00:10&quot; end=&quot;18:30&quot; minTime=&quot;09:00&quot; placeholder=&quot;Select time&quot; /&gt;
    &lt;/jk-field&gt;
&lt;/template&gt;

&lt;script&gt;
import { Component, VNode } from &quot;@joker.front/core&quot;;

export default class extends Component {
    handleClick(e: VNode.Event, ref: string) {
        this.$getRef(ref)?.component.open();
    }
}
&lt;/script&gt;
</code></pre>
        </DemoContainer>
        <h3>任意时间点</h3>
        <p>
            可以选择任意时间，使用 jk-time-picker 标签，通过
            <code>minTime</code>
            /
            <code>maxTime</code>
            限制可选时间范围。
            可通过配置 format，来控制是否显示秒。
        </p>
        <DemoContainer component="@(components.DEMO_JOKER_demo3)">
            <pre><code class="language-html">&lt;template&gt;
    &lt;jk-field&gt;
        &lt;jk-button fullWidth type=&quot;primary&quot; @click=&quot;handleClick('picker1')&quot;&gt;Default 19:30:25&lt;/jk-button&gt;
    &lt;/jk-field&gt;
    &lt;jk-field&gt;
        &lt;jk-button fullWidth type=&quot;primary&quot; @click=&quot;handleClick('picker2')&quot;&gt;Selectable Range&lt;/jk-button&gt;
    &lt;/jk-field&gt;
    &lt;jk-time-picker ref=&quot;picker1&quot; default-value=&quot;19:30:25&quot; @pick=&quot;handlePick&quot; /&gt;
    &lt;jk-time-picker
        ref=&quot;picker2&quot;
        format=&quot;HH:mm&quot;
        selectable-range=&quot;@([['08:30', '11:30'], '14:00 - 18:00'])&quot;
        @pick=&quot;handlePick&quot;
        labelFormat=&quot;@labelFormat&quot;
    /&gt;
    &lt;jk-field&gt;
        &lt;jk-date type=&quot;time&quot; default-value=&quot;19:30:25&quot; placeholder=&quot;Select time&quot; /&gt;
    &lt;/jk-field&gt;
    &lt;jk-field&gt;
        &lt;jk-date
            type=&quot;time&quot;
            format=&quot;HH时mm分&quot;
            value-format=&quot;HH:mm&quot;
            selectable-range=&quot;@([['08:30', '11:30'], '14:00 - 18:00'])&quot;
            placeholder=&quot;Select time&quot;
        /&gt;
    &lt;/jk-field&gt;
&lt;/template&gt;

&lt;script&gt;
import { Component, VNode } from &quot;@joker.front/core&quot;;
import { Toast } from &quot;../../../packages/toast&quot;;

export default class extends Component {
    handleClick(e: VNode.Event, ref: string) {
        this.$getRef(ref)?.component.open();
    }

    handlePick(e: VNode.Event&lt;{ hours: number; minutes: number; seconds: number }&gt;) {
        Toast(`${e.data.hours}:${e.data.minutes}:${e.data.seconds}`);
    }
    labelFormat(value: number, type: string) {
        if (type === &quot;hours&quot;) {
            return value + &quot; 时&quot;;
        }
    }
}
&lt;/script&gt;
</code></pre>
        </DemoContainer>
        <h3>禁用</h3>
        <DemoContainer component="@(components.DEMO_JOKER_demo5)">
            <pre><code class="language-html">&lt;template&gt;
    &lt;jk-field&gt;
        &lt;jk-date type=&quot;time-select&quot; start=&quot;08:30&quot; step=&quot;00:10&quot; end=&quot;18:30&quot; placeholder=&quot;Select time&quot; disabled /&gt;
    &lt;/jk-field&gt;
    &lt;jk-field&gt;
        &lt;jk-date type=&quot;time&quot; value=&quot;19:30:25&quot; placeholder=&quot;Select time&quot; disabled /&gt;
    &lt;/jk-field&gt;
&lt;/template&gt;
</code></pre>
        </DemoContainer>
        <h3>尺寸</h3>
        <p>
            参考
            <code>input</code>
            size 属性
        </p>
        <DemoContainer component="@(components.DEMO_JOKER_demo6)">
            <pre><code class="language-html">&lt;template&gt;
    &lt;jk-field&gt;
        &lt;jk-date type=&quot;time-select&quot; placeholder=&quot;Select time&quot; size=&quot;large&quot; /&gt;
    &lt;/jk-field&gt;
    &lt;jk-field&gt;
        &lt;jk-date type=&quot;time-select&quot; placeholder=&quot;Select time&quot; /&gt;
    &lt;/jk-field&gt;
    &lt;jk-field&gt;
        &lt;jk-date type=&quot;time-select&quot; placeholder=&quot;Select time&quot; size=&quot;small&quot; /&gt;
    &lt;/jk-field&gt;
    &lt;jk-field&gt;
        &lt;jk-date type=&quot;time-select&quot; placeholder=&quot;Select time&quot; size=&quot;mini&quot; /&gt;
    &lt;/jk-field&gt;
&lt;/template&gt;
</code></pre>
        </DemoContainer>
        <h3>Time Select Attribute</h3>
        <table class="mkd-table">
            <thead>
                <tr>
                    <th>参数</th>
                    <th>说明</th>
                    <th>类型</th>
                    <th>可选值</th>
                    <th>默认值</th>
                </tr>
            </thead>
            <tbody>
                <tr>
                    <td>start</td>
                    <td>开始时间</td>
                    <td>string</td>
                    <td>—</td>
                    <td>09:00</td>
                </tr>
                <tr>
                    <td>end</td>
                    <td>结束时间</td>
                    <td>string</td>
                    <td>—</td>
                    <td>18:00</td>
                </tr>
                <tr>
                    <td>step</td>
                    <td>间隔时间</td>
                    <td>string</td>
                    <td>—</td>
                    <td>00:30</td>
                </tr>
                <tr>
                    <td>minTime</td>
                    <td>最小时间，小于该时间的时间段将被禁用</td>
                    <td>string</td>
                    <td>—</td>
                    <td>00:00</td>
                </tr>
                <tr>
                    <td>maxTime</td>
                    <td>最大时间，大于该时间的时间段将被禁用</td>
                    <td>string</td>
                    <td>—</td>
                    <td>—</td>
                </tr>
                <tr>
                    <td>format</td>
                    <td>值规则</td>
                    <td>string</td>
                    <td>—</td>
                    <td>HH:mm</td>
                </tr>
                <tr>
                    <td>defauleValue</td>
                    <td>默认展示值</td>
                    <td>string</td>
                    <td>—</td>
                    <td>—</td>
                </tr>
                <tr>
                    <td>value</td>
                    <td>值</td>
                    <td>string</td>
                    <td>—</td>
                    <td>—</td>
                </tr>
            </tbody>
        </table>
        <h3>Time Select Events</h3>
        <table class="mkd-table">
            <thead>
                <tr>
                    <th>事件名</th>
                    <th>说明</th>
                    <th>参数</th>
                </tr>
            </thead>
            <tbody>
                <tr>
                    <td>pick</td>
                    <td>选中值后出发事件</td>
                    <td>string</td>
                </tr>
            </tbody>
        </table>
        <h3>Time Picker Attribute</h3>
        <table class="mkd-table">
            <thead>
                <tr>
                    <th>参数</th>
                    <th>说明</th>
                    <th>类型</th>
                    <th>可选值</th>
                    <th>默认值</th>
                </tr>
            </thead>
            <tbody>
                <tr>
                    <td>format</td>
                    <td>值规则</td>
                    <td>string</td>
                    <td>—</td>
                    <td>HH:mm:ss</td>
                </tr>
                <tr>
                    <td>defauleValue</td>
                    <td>默认展示值</td>
                    <td>string</td>
                    <td>—</td>
                    <td>—</td>
                </tr>
                <tr>
                    <td>value</td>
                    <td>值</td>
                    <td>string</td>
                    <td>—</td>
                    <td>—</td>
                </tr>
                <tr>
                    <td>selectableRange</td>
                    <td>
                        可选时间段，例如
                        <code>'18:30:00 - 20:30:00'</code>
                        或者传入数组
                        <code>['09:30:00 - 12:00:00', '14:30:00 - 18:30:00']</code>
                    </td>
                    <td>string / array</td>
                    <td>—</td>
                    <td>—</td>
                </tr>
                <tr>
                    <td>format</td>
                    <td>时间格式化</td>
                    <td>string</td>
                    <td>
                        小时：
                        <code>HH</code>
                        ，分：
                        <code>mm</code>
                        ，秒：
                        <code>ss</code>
                    </td>
                    <td>'HH:mm:ss'</td>
                </tr>
                <tr>
                    <td>labelFormat</td>
                    <td>自定义展示列的文本</td>
                    <td>(value: number, type: string) =&gt; string</td>
                    <td>—</td>
                    <td>jk-icon-time</td>
                </tr>
            </tbody>
        </table>
        <h3>Time Picker Events</h3>
        <table class="mkd-table">
            <thead>
                <tr>
                    <th>事件名</th>
                    <th>说明</th>
                    <th>参数</th>
                </tr>
            </thead>
            <tbody>
                <tr>
                    <td>pick</td>
                    <td>选中值后出发事件</td>
                    <td>
                        {hours:number,minutes:number,seconds:number}
                    </td>
                </tr>
            </tbody>
        </table>
        <h3>Date Attributes</h3>
        <table class="mkd-table">
            <thead>
                <tr>
                    <th>参数</th>
                    <th>说明</th>
                    <th>类型</th>
                    <th>可选值</th>
                    <th>默认值</th>
                </tr>
            </thead>
            <tbody>
                <tr>
                    <td>value</td>
                    <td>绑定值</td>
                    <td>string</td>
                    <td>—</td>
                    <td>—</td>
                </tr>
                <tr>
                    <td>type</td>
                    <td>类型</td>
                    <td>'time'/'time-select'</td>
                    <td>—</td>
                    <td>—</td>
                </tr>
                <tr>
                    <td>class</td>
                    <td>自定义 class 样式</td>
                    <td>string</td>
                    <td>-</td>
                    <td>-</td>
                </tr>
                <tr>
                    <td>disabled</td>
                    <td>禁用</td>
                    <td>boolean</td>
                    <td>—</td>
                    <td>false</td>
                </tr>
                <tr>
                    <td>clearable</td>
                    <td>是否显示清除按钮</td>
                    <td>boolean</td>
                    <td>—</td>
                    <td>true</td>
                </tr>
                <tr>
                    <td>size</td>
                    <td>输入框尺寸</td>
                    <td>string</td>
                    <td>large / small / mini</td>
                    <td>—</td>
                </tr>
                <tr>
                    <td>placeholder</td>
                    <td>非范围选择时的占位内容</td>
                    <td>string</td>
                    <td>—</td>
                    <td>—</td>
                </tr>
                <tr>
                    <td>format</td>
                    <td>展示值的格式</td>
                    <td>string</td>
                    <td>-</td>
                    <td>HH:mm:ss</td>
                </tr>
                <tr>
                    <td>value-format</td>
                    <td>可选，绑定值的格式</td>
                    <td>string</td>
                    <td>-</td>
                    <td>HH:mm:ss</td>
                </tr>
                <tr>
                    <td>default-value</td>
                    <td>可选，选择器打开时默认显示的时间</td>
                    <td>string</td>
                    <td>符合 format 格式</td>
                    <td>—</td>
                </tr>
                <tr>
                    <td>icon</td>
                    <td>自定义图标的类名</td>
                    <td>string</td>
                    <td>—</td>
                    <td>jk-icon-time</td>
                </tr>
                <tr>
                    <td>labelFormat</td>
                    <td>自定义展示列的文本</td>
                    <td>(value: number, type: string) =&gt; string</td>
                    <td>—</td>
                    <td>jk-icon-time</td>
                </tr>
            </tbody>
        </table>
        <h3>Date Events</h3>
        <table class="mkd-table">
            <thead>
                <tr>
                    <th>事件名</th>
                    <th>说明</th>
                    <th>参数</th>
                </tr>
            </thead>
            <tbody>
                <tr>
                    <td>change</td>
                    <td>用户确认选定的值时触发</td>
                    <td>值（按照valueFomat格式化后的值）</td>
                </tr>
            </tbody>
        </table>
        <BottomNav />
    </div>
</template>

<script>
import { Component } from "@joker.front/core";
import hljs from "highlight.js/lib/common";
import BottomNav from "../../common/components/bottom-nav.joker";
import DEMO_JOKER_demo6 from "../../components/time-picker/demo6.joker";
import DEMO_JOKER_demo5 from "../../components/time-picker/demo5.joker";
import DEMO_JOKER_demo3 from "../../components/time-picker/demo3.joker";
import DEMO_JOKER_demo2 from "../../components/time-picker/demo2.joker";
import DEMO_JOKER_demo1 from "../../components/time-picker/demo1.joker";
export default class extends Component {
    components = {
        BottomNav,
        DEMO_JOKER_demo6,
        DEMO_JOKER_demo5,
        DEMO_JOKER_demo3,
        DEMO_JOKER_demo2,
        DEMO_JOKER_demo1
    };
    mounted() {
        let container = this.$getRef("container")?.output!;
        container.querySelectorAll("pre code").forEach((el: HTMLElement) => {
            hljs.highlightElement(el);
        });
    }
}

</script>