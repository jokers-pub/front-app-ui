<template>
    <div ref="container" class="joker-demo-container">
        <h2>Upload Img 上传图片组件</h2>
        <p>
            用于将本地的图片上传至服务器，并在上传过程中展示预览图。目前 Uploader 组件不包含将文件上传至服务器的接口逻辑，该步骤需要自行实现。
        </p>
        <h3>基础用法</h3>
        <DemoContainer component="@(components.DEMO_JOKER_demo1)">
            <pre><code class="language-html">&lt;template&gt;
    &lt;jk-cell&gt;
        &lt;jk-upload-img
            value=&quot;@(['https://img.freepik.com/free-photo/dark-car-highway-evening-drive-summer-scenery_169016-68014.jpg??w=360'])&quot;
        /&gt;
    &lt;/jk-cell&gt;
&lt;/template&gt;

</code></pre>
        </DemoContainer>
        <h3>限制文件数量</h3>
        <p>
            可通过
            <code>maxFileCount</code>
            来配置最多文件上传数
        </p>
        <DemoContainer component="@(components.DEMO_JOKER_demo2)">
            <pre><code class="language-html">&lt;template&gt;
    &lt;jk-cell&gt;
        &lt;jk-upload-img max-file-count=&quot;2&quot; /&gt;
    &lt;/jk-cell&gt;
&lt;/template&gt;

</code></pre>
        </DemoContainer>
        <h3>限制文件上传类型</h3>
        <p>
            可通过
            <code>mimeType</code>
            来限制文件上传类型，默认为：[&quot;image/png&quot;, &quot;image/jpeg&quot;]
        </p>
        <DemoContainer component="@(components.DEMO_JOKER_demo3)">
            <pre><code class="language-html">&lt;template&gt;
    &lt;jk-cell&gt;
        &lt;jk-upload-img mimeType=&quot;@(['image/png'])&quot; /&gt;
    &lt;/jk-cell&gt;
&lt;/template&gt;

</code></pre>
        </DemoContainer>
        <h3>展示尺寸</h3>
        <p>
            通过配置
            <code>size</code>
            设置组件展示大小
        </p>
        <DemoContainer component="@(components.DEMO_JOKER_demo4)">
            <pre><code class="language-html">&lt;template&gt;
    &lt;jk-cell&gt;
        &lt;jk-upload-img
            size=&quot;large&quot;
            value=&quot;@(['https://img.freepik.com/free-photo/dark-car-highway-evening-drive-summer-scenery_169016-68014.jpg??w=360'])&quot;
        /&gt;
    &lt;/jk-cell&gt;
    &lt;jk-cell&gt;
        &lt;jk-upload-img
            value=&quot;@(['https://img.freepik.com/free-photo/dark-car-highway-evening-drive-summer-scenery_169016-68014.jpg??w=360'])&quot;
        /&gt;
    &lt;/jk-cell&gt;
    &lt;jk-cell&gt;
        &lt;jk-upload-img
            size=&quot;small&quot;
            value=&quot;@(['https://img.freepik.com/free-photo/dark-car-highway-evening-drive-summer-scenery_169016-68014.jpg??w=360'])&quot;
        /&gt;
    &lt;/jk-cell&gt;
    &lt;jk-cell&gt;
        &lt;jk-upload-img
            size=&quot;mini&quot;
            value=&quot;@(['https://img.freepik.com/free-photo/dark-car-highway-evening-drive-summer-scenery_169016-68014.jpg??w=360'])&quot;
        /&gt;
    &lt;/jk-cell&gt;
&lt;/template&gt;

</code></pre>
        </DemoContainer>
        <h3>模拟上传</h3>
        <p>
            可通过
            <code>before-read</code>
            和
            <code>before-delete</code>
            来实现自定义上传。
        </p>
        <DemoContainer component="@(components.DEMO_JOKER_demo5)">
            <pre><code class="language-html">&lt;template&gt;
    &lt;jk-cell&gt;
        &lt;jk-upload-img before-read=&quot;@beforeRead&quot; before-delete=&quot;@beforeDelete&quot; /&gt;
    &lt;/jk-cell&gt;
&lt;/template&gt;
&lt;script&gt;
import { Component } from &quot;@joker.front/core&quot;;
import { sleep } from &quot;@joker.front/shared&quot;;
import { Loading } from &quot;../../../src&quot;;

export default class extends Component {
    async beforeRead(file: File) {
        let loading = Loading();
        //模拟上传
        await sleep(1000);
        loading.close();
        //返回上传后的文件路径
        return URL.createObjectURL(file);

        //返回false 则代表上传/读取失败，将不会添加到展示结果中
        //return false;
    }

    async beforeDelete(index: number, urlOrFile: any) {
        let loading = Loading();
        //模拟从服务器中删除地址
        await sleep(1000);
        loading.close();

        //返回false 则代表上传/读取失败，将不会添加到展示结果中
        //return false;
    }
}
&lt;/script&gt;
</code></pre>
        </DemoContainer>
        <h3>Attributes</h3>
        <table class="mkd-table">
            <thead>
                <tr>
                    <th>参数</th>
                    <th>说明</th>
                    <th>类型</th>
                    <th>可选值</th>
                    <th>默认值</th>
                </tr>
            </thead>
            <tbody>
                <tr>
                    <td>class</td>
                    <td>自定义样式</td>
                    <td>string</td>
                    <td>—</td>
                    <td>—</td>
                </tr>
                <tr>
                    <td>size</td>
                    <td>展示尺寸</td>
                    <td>large/small/mini</td>
                    <td>—</td>
                    <td>—</td>
                </tr>
                <tr>
                    <td>returnType</td>
                    <td>
                        作为表单返回的数据类型，当通过
                        <code>before-read</code>
                        自定义上传并返回服务端地址时，则returnType将更改为url
                    </td>
                    <td>url/file</td>
                    <td>—</td>
                    <td>file</td>
                </tr>
                <tr>
                    <td>disabled</td>
                    <td>是否禁用</td>
                    <td>boolean</td>
                    <td>—</td>
                    <td>false</td>
                </tr>
                <tr>
                    <td>maxFileCount</td>
                    <td>最大上传个数</td>
                    <td>number</td>
                    <td>—</td>
                    <td></td>
                </tr>
                <tr>
                    <td>maxFileSize</td>
                    <td>最大上传文件大小（kb）</td>
                    <td>number</td>
                    <td>—</td>
                    <td></td>
                </tr>
                <tr>
                    <td>mimeType</td>
                    <td>
                        限制文件类型，支持通配符例如：
                        <strong>(image/*)</strong>
                    </td>
                    <td>string / string[]</td>
                    <td>—</td>
                    <td>—</td>
                </tr>
                <tr>
                    <td>beforeRead</td>
                    <td>文件读取前操作，可实现自定义上传</td>
                    <td>(file: File) =&gt; any</td>
                    <td>—</td>
                    <td></td>
                </tr>
                <tr>
                    <td>beforeDelete</td>
                    <td>文件删除时操作，可实现自定义服务端删除</td>
                    <td>(index: number, urlOrFile: any) =&gt;any</td>
                    <td>—</td>
                    <td></td>
                </tr>
            </tbody>
        </table>
        <BottomNav />
    </div>
</template>

<script>
import { Component } from "@joker.front/core";
import hljs from "highlight.js/lib/common";
import BottomNav from "../../common/components/bottom-nav.joker";
import DEMO_JOKER_demo5 from "../../components/upload-img/demo5.joker";
import DEMO_JOKER_demo4 from "../../components/upload-img/demo4.joker";
import DEMO_JOKER_demo3 from "../../components/upload-img/demo3.joker";
import DEMO_JOKER_demo2 from "../../components/upload-img/demo2.joker";
import DEMO_JOKER_demo1 from "../../components/upload-img/demo1.joker";
export default class extends Component {
    components = {
        BottomNav,
        DEMO_JOKER_demo5,
        DEMO_JOKER_demo4,
        DEMO_JOKER_demo3,
        DEMO_JOKER_demo2,
        DEMO_JOKER_demo1
    };
    mounted() {
        let container = this.$getRef("container")?.output!;
        container.querySelectorAll("pre code").forEach((el: HTMLElement) => {
            hljs.highlightElement(el);
        });
    }
}

</script>